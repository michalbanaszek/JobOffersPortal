<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}\Log\InnerLog.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="errorFile-web" fileName="${basedir}\log\${shortdate}.log"
				layout="${newline}-------------- ${level} (${longdate}) --------------${newline}${newline} 
		   Call Site: ${callsite}${newline} Exception Type: ${exception:format=Type}${newline}
		   Exception Message: ${exception:format=Message}${newline}
		   Stack Trace: ${exception:format=StackTrace}${newline}
		   Additional Info: ${message}${newline}"/>

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="otherFile-web" fileName="${basedir}\log\${shortdate}.log"
          layout="->(${longdate}) : ${level} : ${message}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />	
	
		<logger name="*" minlevel="Error" writeTo="errorFile-web" />
		<logger name="*" minlevel="Info" maxLevel="Warn" writeTo="otherFile-web" />
	</rules>
</nlog>